syntax = "proto3";

package proto;
option go_package = "./proto";

import "define.proto";

message ToTheMoonQueryPathReq {
  Vector destination_pos = 9;
  int32 fuzzy_range = 15;

  OptionType query_type = 8;
  enum OptionType {
    OPTION_NONE = 0;
    OPTION_NORMAL = 1;
  }

  AStarMethod astar_method = 1;
  enum AStarMethod {
    Classic = 0;
    Tendency = 1;
    Adaptive = 2;
    Inflection = 3;
  }

  uint32 scene_id = 6;
  int32 query_id = 11;

  FilterType filter_type = 3;
  enum FilterType {
    All = 0;
    Air = 1;
    Water = 2;
  }

  bool refined = 13;
  bool use_full_neighbor = 5;
  Vector source_pos = 10;

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 6172;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }
}

message ToTheMoonQueryPathRsp {
  PathStatusType query_status = 7;
  enum PathStatusType {
    STATUS_FAIL = 0;
    STATUS_SUCC = 1;
    STATUS_PARTIAL = 2;
  }

  repeated int64 index = 3;
  repeated Vector corners = 14;
  repeated int32 level = 1;
  int32 retcode = 8;
  int32 query_id = 9;

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 6198;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }
}

message ToTheMoonPingNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 6112;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }
}

message ToTheMoonEnterSceneReq {
  uint32 version = 14;
  uint32 scene_id = 15;

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 6135;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }
}

message ToTheMoonEnterSceneRsp {
  int32 retcode = 7;

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 6107;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }
}

message ToTheMoonObstacleInfo {
  ShapeType type = 2;
  enum ShapeType {
    OBSTACLE_SHAPE_CAPSULE = 0;
    OBSTACLE_SHAPE_BOX = 1;
  }

  int32 handle_id = 11;
  MathQuaternion rotation = 7;
  Vector center = 13;
  Vector half_extents = 14;
}

message ToTheMoonAddObstacleReq {
  bool use_edge = 12;
  ToTheMoonObstacleInfo obstacle = 13;
  int32 query_id = 9;
  uint32 scene_id = 3;

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 6121;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }
}

message DynamicSVONode {
  int64 index = 8;
  int32 area = 5;
  Vector refer_pos = 1;
}

message DynamicLayerNodes {
  int32 level = 10;
  repeated DynamicSVONode nodes = 6;
}

message DynamicNodes {
  repeated DynamicLayerNodes nodes = 3;
}

message ToTheMoonAddObstacleRsp {
  DynamicNodes dynamic_nodes = 2;
  int32 query_id = 13;
  int32 retcode = 11;

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 6103;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }
}

message ToTheMoonRemoveObstacleReq {
  int32 handle = 12;
  uint32 scene_id = 10;
  int32 query_id = 11;

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 6190;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  enum ObstacleType {
    Box = 0;
    Capsule = 1;
  }
}

message ToTheMoonRemoveObstacleRsp {
  int32 query_id = 3;
  int32 retcode = 14;
  DynamicNodes dynamic_nodes = 8;

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 6173;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }
}

message ToTheMoonObstaclesModifyNotify {
  repeated ToTheMoonObstacleInfo add_obstacles = 4;
  repeated int32 remove_obstacle_ids = 13;
  uint32 scene_id = 15;
  bool use_edge = 1;

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 6199;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }
}
